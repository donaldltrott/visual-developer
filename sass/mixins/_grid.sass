@mixin container-fixed($gutter: $grid-gutter-width)
    margin-right: auto
    margin-left: auto
    padding-left: ($gutter / 2)
    padding-right: ($gutter / 2)

// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width)
    margin-left: -($gutter / 2)
    margin-right: -($gutter / 2)
    display: flex
    flex: 0 1 auto
    flex-direction: row
    flex-wrap: wrap

@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}")
    @for $i from (1 + 1) through $grid-columns
        $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}"

    #{$list}
        flex: 0 0 auto
        // Prevent columns from collapsing when empty
        min-height: 0.01rem
        // Inner gutter via padding
        padding-left: ($grid-gutter-width / 2)
        padding-right: ($grid-gutter-width / 2)

@mixin calc-grid-column($index, $class, $type)
    @if ($type == width) and ($index > 0)
        .col-#{$class}-#{$index}
            -ms-flex-preferred-size: percentage(($index / $grid-columns))
            flex-basis: percentage(($index / $grid-columns))
            max-width: percentage(($index / $grid-columns))

    @if ($type == offset) and ($index > 0)
        .col-#{$class}-offset-#{$index}
            margin-left: percentage(($index / $grid-columns))

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin loop-grid-columns($columns, $class, $type)
    @for $i from 0 through $columns
        @include calc-grid-column($i, $class, $type)

// Create grid for specific class
@mixin make-grid($class)
    .col-#{$class}
        flex-grow: 1
        -ms-flex-preferred-size: 0
        flex-basis: 0
        max-width: 100%

    @include loop-grid-columns($grid-columns, $class, width)
    @include loop-grid-columns($grid-columns, $class, offset)
